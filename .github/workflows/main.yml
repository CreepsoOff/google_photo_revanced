name: Build and Release

on:
    workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Installer Python
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      # Installer les dépendances
      - name: Install dependencies
        run: |
          pip install requests apkpure

      # Télécharger les APK et les fichiers ReVanced
      - name: Download APKs and ReVanced files
        run: |
          python download_apk.py

      # Étape 3: Patcher l'APK Google Photos
      - name: Patch Google Photos APK
        run: |
          java -jar revanced-cli.jar patch \
            --patch-bundle revanced-patches.jar \
            -o patched_google_photos.apk \
            google_photos_clean.apk \
            --merge revanced-integrations.apk

      # Étape 4: Créer le répertoire de sortie
      - name: Create output dir
        run: mkdir -p output

      # Étape 5: Déplacer le fichier patché
      - name: Move patched APK to output dir
        run: mv patched_google_photos.apk output/

      # Étape 6: Créer un tag avec la version spécifiée
      - name: Create tag and release
        id: create_release
        run: |
          VERSION=$(<version.txt)
          git tag "$VERSION"
          git push origin "$VERSION"
          echo "::set-output name=tag_name::$VERSION"

      # Étape 7: Publier la release
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.create_release.outputs.tag_name }}
          files: output/patched_google_photos.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

